; theme
(load-theme 'manoj-dark t)

; marmalade melpa
(require 'package)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)

; evil plugin
(add-to-list 'load-path "~/.emacs.d/evil")
(require 'evil)
(evil-mode 1)

; chord plugin
(add-to-list 'load-path "~/.emacs.d/key-chord")
(require 'key-chord)
(key-chord-mode 1)

; php plugin
(add-to-list 'load-path "~/.emacs.d/php-mode")
(require 'php-mode)

; indent
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)

; auto-complete
(add-to-list 'load-path "~/.emacs.d/autocomplete")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/autocomplete/ac-dict")
(ac-config-default)

; line number
(defvar my-linum-current-line-number 0)
(setq linum-format 'my-linum-relative-line-numbers)
(defun my-linum-relative-line-numbers (line-number)
    (let ((test2 (1+ (- line-number my-linum-current-line-number))))
        (propertize
            (number-to-string (cond ((<= test2 0) (1- test2))
                ((> test2 0) test2)))
                    'face 'linum)))
(defadvice linum-update (around my-linum-update)
    (let ((my-linum-current-line-number (line-number-at-pos)))
        ad-do-it))
(ad-activate 'linum-update)
(global-linum-mode t)

; evil key-binding
(eval-after-load "evil"
    '(progn
        ; command map
        (define-key evil-normal-state-map ";" 'evil-ex)
        ; esc map
        (key-chord-define evil-insert-state-map ",," 'evil-normal-state)
        (key-chord-define evil-normal-state-map ",," (kbd "<escape>"))
        (key-chord-define evil-visual-state-map ",," 'evil-normal-state)
        ; auto complete
        (define-key ac-completing-map (kbd "C-n") 'ac-next)
        (define-key ac-completing-map (kbd "C-p") 'ac-previous)
        (define-key ac-completing-map (kbd "C-g") 'ac-stop)
        (define-key ac-completing-map (kbd "ESC") 'evil-normal-state)
        (key-chord-define ac-completing-map ",," 'evil-normal-state)
        (evil-make-intercept-map ac-completing-map)
        ; scroll
        (define-key evil-normal-state-map (kbd "C-u") 'evil-scroll-up)
        (define-key evil-normal-state-map (kbd "C-d") 'evil-scroll-down)
        ))
